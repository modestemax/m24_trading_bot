'use strict';
var eMaker = require('../lib/error-maker');
var expect = require('chai').expect;
var anno = require('pd-api-test-anno')();
describe('Error-maker:', function () {
    it('should generate error', function (done) {
        anno.tcase(function () {
            var err = eMaker('input', 'my bad', 402, 'err');
            expect(err).to.be.an.instanceOf(Error);
            expect(err.isPdn).to.equal(true);
            expect(err.status).to.equal(402);
            expect(err.errors.input.message).to.equal('my bad');
            expect(err.errors.input.value).to.equal('err');
            console.log('Error made and tested');
            console.log(err);

            var badClientError = eMaker.req('email', 'invalid', '#$%');
            expect(badClientError).to.be.an.instanceOf(Error);
            expect(badClientError.isPdn).to.equal(true);
            expect(badClientError.status).to.equal(403);
            expect(badClientError.errors.email.message).to.equal('invalid');
            expect(badClientError.errors.email.value).to.equal('#$%');
            console.log(badClientError);

            var sysError = eMaker.sysMessage('crashed');
            expect(sysError).to.be.an.instanceOf(Error);
            expect(sysError.isPdn).to.equal(true);
            expect(sysError.status).to.equal(500);
            expect(sysError.errors['pdn-sys'].message).to.equal('crashed');
            console.log(sysError);

            var sysFieldError = eMaker.sys('db', 'crashed', 'at1');
            expect(sysFieldError).to.be.an.instanceOf(Error);
            expect(sysFieldError.isPdn).to.equal(true);
            expect(sysFieldError.status).to.equal(500);
            expect(sysFieldError.errors.db.message).to.equal('crashed');
            expect(sysFieldError.errors.db.value).to.equal('at1');
            console.log(sysFieldError);
        }, done, 'Generate error');
    });
});
