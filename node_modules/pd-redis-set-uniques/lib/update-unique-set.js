'use strict';
var q = require('q');

module.exports = function (Record) {
    var allRangePromises = [];
    (Record.uniqDefKeys() || []).forEach(function (uniqDef) {
        var fields = Record.uniqFieldsOf(uniqDef);
        fields.unshift('pd-sid');
        allRangePromises.push(
            Record.range({
                latest: (new Date()).getTime(),
                earliest: 0,
                fields: fields
            }).then(function (records) {
                var allSetSyncPromises = [];
                (records || []).forEach(function (record) {
                    var sid = record[0];
                    var end = fields.length;
                    var uid = record.slice(1, end).toString();
                    var uSetKey = Record.uniqNm.uniqSetOf(uniqDef);
                    var oldUid;
                    allSetSyncPromises.push(
                        Record.redis.exec('zrangebyscore', [uSetKey, sid, sid]).then(function (setItems) {
                            if (setItems.length > 1) {
                                throw new Error('lack of uniqueness in uniq set');
                            }
                            oldUid = setItems[0];
                            return !oldUid || (oldUid + '') !== uid;
                        }).then(function (needSet) {
                            var ret;
                            if (needSet) {
                                var multis = [];
                                if (oldUid) {
                                    multis.push(['zrem', uSetKey, oldUid]);
                                }
                                multis.push(['zadd', uSetKey, sid, uid]);
                                ret = Record.redis.multi(multis);
                            }
                            return ret;
                        })
                    );
                });
                return q.allSettled(allSetSyncPromises);
            })
        );
    });
    return q.allSettled(allRangePromises);
};