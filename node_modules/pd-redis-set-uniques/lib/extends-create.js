'use strict';
var q = require('q');
var announcer = require('pd-api-announcer');

module.exports = function (Record) {
    var oldCreate = Record.create;
    Record.create = function (profile, multiGen) {
        var nomen = Record.uniqNm;
        var promises = [];
        var prof = profile || {};
        var traverseDefs = function (traverser) {
            Record.uniqDefKeys().forEach(traverser);
        };
        traverseDefs(function (def) {
            var uid = nomen.uniqIdOf(def, prof);
            var uFields = Record.uniqFieldsOf(def);
            promises.push(
                q.Promise(function (reslv) {
                    (uFields || []).forEach(function (ufield) {
                        announcer.assertNonEmptyString(prof[ufield], ufield + ':of:' + def);
                    });
                    reslv();
                }).then(function () {
                    return Record.checkUniqAbsenceOf(def, uid);
                })
            );
        });
        return q.all(promises).then(function () {
            return oldCreate.call(Record, prof, function (multis, profile) {
                var mulGenArgs = arguments;
                return q.Promise(function (reslv) {
                    traverseDefs(function (def) {
                        var uid = nomen.uniqIdOf(def, profile);
                        multis.push(['zadd', nomen.uniqSetOf(def), profile['pd-sid'], uid]);
                    });
                    reslv(multis);
                }).then(function () {
                    return (multiGen || function (multis) {
                        return multis;
                    }).apply(Record, mulGenArgs);
                });
            });
        });
    };
};
