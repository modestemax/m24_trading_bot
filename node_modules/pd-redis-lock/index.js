'use strict';
var q = require('q');
var lock = require('./lib/to-lock');
var unlock = require('./lib/to-unlock');
var nmcl = require('./lib/nomenclt');

/**
 *
 * @param {string} name
 * @param {function} onLocked - process when the record is locked, it can also return a promise for the lock to wait
 * @param {int} [expiresInMs] - by default 15000test_lock.jstest_lock.js
 * @param {object} [redis]
 * @returns {promise}
 */
module.exports = function (name, onLocked, expiresInMs, redis) {
    return q.Promise(function (resolve, reject) {
        lock(nmcl(name), expiresInMs, redis).then(function () {
            resolve(onLocked());
        }).fin(function () {
            return unlock(nmcl(name), redis);
        }).fail(function (err) {
            reject(err);
        });
    });
};
