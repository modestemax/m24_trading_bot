'use strict';
var q = require('q');
var nm = require('./parenthood-nomenclt');
var methodNomen = require('./nomenclt');
var announcer = require('pd-api-announcer');

module.exports = function (Parent, Child) {
    var bearerName = methodNomen.bearerFor(Child);
    var pmdlName = Parent.modelName();
    var sidName = pmdlName + 'Sid';
    Parent[bearerName] = function (parentSid, childProfile, multiGen) {
        childProfile[sidName] = (parentSid + '');
        var relationKey = nm.childOf(Child.modelName(), pmdlName, parentSid);
        var oldMulGen = multiGen || function (multis) {
                return multis;
            };
        var finalMGen = function (mulList, cProfile) {
            var mulArgs = arguments;
            return q.Promise(function (resolve) {
                var childrenId = cProfile['pd-sid'];
                mulList.push(['zadd', relationKey, (new Date()).getTime(), childrenId]);
                mulArgs[0] = mulList;
                resolve(mulList);
            }).then(function () {
                return oldMulGen.apply(Child, mulArgs);
            });
        };

        return q.Promise(function (resolve) {
            if (!announcer.isNonEmptyString(childProfile[sidName])) {
                throw announcer.error.sys(sidName, 'empty');
            }
            resolve();
        }).then(function () {
            return Child.create(childProfile, finalMGen);
        });
    };
};
