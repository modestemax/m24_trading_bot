'use strict';
var q = require('q');
var announcer = require('pd-api-announcer');
module.exports = function (Record) {
    Record.checkUniqAbsenceOf = function (uniqDef, uniqId) {
        return q.Promise(function (reslv, reject) {
            var nomen = Record.uniqNm;
            var uidStr = (uniqId || '').toString();
            Record.redis.zsetExists(nomen.uniqSetOf(uniqDef), uidStr).then(function () {
                reject(announcer.error.req(uniqDef, 'taken'));
            }).fail(function (err) {
                if (announcer.error(err).isSysFor('zsetItem', 'gone')) {
                    reslv(1);
                    return;
                }
                reject(err);
            });
        });
    };

    Record.checkUniqAbsenceExceptSid = function (sid, uniqDef, uniqId) {
        return q.Promise(function (reslv) {
            var nomen = Record.uniqNm;
            var uidStr = (uniqId || '').toString();
            reslv(
                Record.redis.exec('zscore', [nomen.uniqSetOf(uniqDef), uidStr]).then(function (foundSid) {
                    if (foundSid && (foundSid + '') !== (sid + '')) {
                        throw announcer.error.req(uniqDef, 'taken');
                    }
                    reslv(1);
                })
            );
        });
    };
};
